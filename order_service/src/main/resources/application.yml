server:
  port: 9002
spring:
  application:
    name: order-service # 订单服务
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring_cloud_test?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: root
    password: mysql123
  jpa:
    database: mysql
    show-sql: true
    open-in-view: true

  ##开始配置consul的服务发现
  cloud:
    consul:
      host: 127.0.0.1 #consul 服务器的主机地址
      port: 8500 # consul服务器的端口
      discovery:
        #是否需要注册(默认为true)
        register: true
        #注册的实例ID(唯一标志)
        instance-id: ${spring.application.name}-1
        #服务的名称
        service-name: ${spring.application.name}
        #服务的请求端口
        port: ${server.port}
        #指定开启IP地址注册
        prefer-ip-address: true
        #当前服务的请求ip
        ip-address: ${spring.cloud.client.ip-address}

#配置EurekaClient
#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:9000/eureka/ #多个eurekaServer之间用,隔开
#  instance:
#    prefer-ip-address: true #使用ip地址注册

#配置日志
#logging:
#  level:
#    root: debug

#配置Ribbon的负载均衡策略
#product-service: #服务实例的名称
#  ribbon:
##    NFloadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobbinRule
#    ConnectTimeout: 250 #Ribbon的连接超时时间
#    ReadTimeout: 1000 #Ribbon的数据读取超时时间
#    OkToRetryOnAllOperations: true #是否对所有操作都进行重试
#    MaxAutoRetriesNextServer: 1 #切换实例的重试次数
#    MaxAutoRetries: 1 #对当前实例的重试次数

